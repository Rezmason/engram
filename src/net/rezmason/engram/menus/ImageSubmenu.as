package net.rezmason.engram.menus {		// IMPORT STATEMENTS	import flash.events.Event;	import flash.geom.Rectangle;		import net.rezmason.engram.display.WindowSizes;	import net.rezmason.gui.GUIGroup;	import net.rezmason.utils.isAIR;	public final class ImageSubmenu extends Submenu {				// CLASS PROPERTIES				// INSTANCE PROPERTIES		private var sizeGroup:GUIGroup = new GUIGroup;						public function ImageSubmenu(__settingsMenu:SettingsMenu):void {			super(__settingsMenu);						sizeGroup.addGUIAbstract(radSmall);			sizeGroup.addGUIAbstract(radMedium);			sizeGroup.addGUIAbstract(radLarge);			sizeGroup.addEventListener(Event.CHANGE, changeSize);						addColorChild(blnSmoothing);			addColorChild(blnBuffer);			addColorChild(monitor.littleWallpaper, 1);			addColorChild(monitor.littleScreen);			addColorChild(radSmall);			addColorChild(radMedium);			addColorChild(radLarge);			if (!isAIR()) {				sizeGroup.enabled = false;			}		}				// PUBLIC METHODS				override internal function trigger(event:Event = null):void {					}				// PRIVATE & PROTECTED METHODS				override protected function prepare(event:Event = null):void {			var currentSize:Rectangle = new Rectangle();			currentSize.width = _settingsMenu.options.windowSize.width;			currentSize.height = _settingsMenu.options.windowSize.height;						switch (currentSize.width) {				case WindowSizes.SMALL.width:					sizeGroup.defaultOption = radSmall;				break;				case WindowSizes.MEDIUM.width:					sizeGroup.defaultOption = radMedium;				break;				case WindowSizes.LARGE.width:					sizeGroup.defaultOption = radLarge;				break;			}		}				override protected function reset(event:Event = null):void {					}				private function ditto(event:Event):void {			dispatchEvent(event);		}				private function changeSize(event:Event):void {			var newSize:Rectangle;			switch (sizeGroup.chosenOption) {				case radSmall:					newSize = WindowSizes.SMALL.clone();				break;				case radMedium:					newSize = WindowSizes.MEDIUM.clone();				break;				case radLarge:					newSize = WindowSizes.LARGE.clone();				break;			}						_settingsMenu.options.windowSize = {width:newSize.width, height:newSize.height};			_settingsMenu.resizeWindow(newSize);		}	}}