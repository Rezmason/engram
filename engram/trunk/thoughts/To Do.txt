Debug menu
	Lets you drag in a SWF
	Allows SWF to be easily replayed
	Tells you if the SWF is valid or not
	If it is, you get to play it
	This is your module.
	Once you've demonstrated that the module can run for five minutes, it lets you convert it to EGM.
		Debug timer in _cell
	When game is over, you go back to the debug menu
	
	Congrats, you've got a module. I'm really proud.
		Now give it to your friends and let them test it. Iron out the kinks.
		Don't forget to show your mom. (Shirley Ann in a picture frame)
	
	btnReturn takes you to main menu
	"Enable debug menu at launch" checkbox
			
Overhaul settings menu

	"Tabbed" system, skims through slides of options (display object slider)
	
	Slides:
		Input (looks like an NES controller)
		Audio (knob for music, knob for effects)
			Makes feedback sounds as you use it
		Video (screen size, Effects, Smoothing)
			Window size setting (AIR-specific)
					320 x 240
					640 x 480
					800 x 600
					1024 x 768
					1280 x 960
			Allow GUIManager to rerez in non-fullscreen situations
			Uses graphic from Windows 95 Display control panel
		Modules (looks like System 7 prefs)
			
			List of modules, alphabetically, with their name, their icon and some toggles
			Scroll bar
			Clicking on a module shows its summary text and author text
				Possibly also shows module-specific settings
					Make TetrisSettingsView for Tetris module
			Delete button
				"Are you positive?" dialog, yes, no
				Grayed out for built-ins, and when game is being played
				
				Complete implementing lastMix
					When a module is deleted, lastMix must also be spliced, saved, etc.
				
			Drag&drop modules in
				"Poke with a stick" dialog
					If new module has the same name as an old module, bring up an overwrite alert
					Successful drop, module list is redrawn and new module is selected
					Unsuccessful drop, "That's not a module" dialog, retry, close
						Remember to delete failures
			
			SettingsMenu grabs data from ModuleManager
				The entire module list
					Gets names, icons, versions and info blurbs (and reference to resetSettings())
				The entire module settings list
					Gets module settings
	
	Default button on each slide
	Return button

New module- Bodhi (organizer)

Leftovers

	Get Main to handle new modules
		Show prompt
		Refresh good loader list
		Refresh strategy, if necessary
		Refresh grid menu
		Success event:
			It gets appended to the main mix
			The Modules settings panel gets updated

	Test for all module-related situations
		Coup d'etat situation especially

	Advanced debug error handling
		If a module doesn't work properly for some reason, a prompt shows up
			(already exists as a built-in, isn't a Module subclass, too large, too big onscreen)
			Listens for Module Loader timeout and alerts the dev
				Jesus Christ, how big is that thing?
					That's what she said.
	Plug in the Debug menu
		Lets you drag in a SWF
		Tells you if the SWF is valid or not
		If it is, you get to play it
		EGM packing

	Should EGMs be zipped SWFs?

Can GUIManager hand Baddie a DisplayObject from within the Guard?

Maybe players should earn game jumps, and only activate them if they want
	This will allow artists to tell their full story

Modules might need time to prepare a new game, or to generate game resources while they're sitting idly
	A module might need to alert the loader once it is ready
	A module that takes too long to do this should be discarded

New Strategy class
Make "enabled modules" object on settings object
	Booleans with String keys
		Strings match module names

Bitmap buffer

Art system
	The canvas should fade out and match color when the game state is not 1 or 4

Art file saving system
	
Document everything
	Write an explanatory text file for net.rezmason.gui package
	Update class listings, include column that states whether class is intended for common use

Improve audio set
	Specify Tetris sound channels

Deployment (by March 2009):
	Engram (AIR app)
		Buy a certificate later
			Get it from the Adobe marketplace!
		
	Modules (.EGM)
		Tetris module
		Breakout module
			Make this entirely outside of Flash CS3
		Some sort of art generation in both of 'em
		Some sort of blab in both of 'em
			
	Source:
		Engram repository
		Full Tetris module source
		Can the source be compiled with Flex SDK?
		Can I has ProFont?
	Website
		Source download
		Game embedded
		Game as download (badge)
		*Marketplace

	Copyleft

Later on:

Gamepad Mode
	net.rezmason.gui.IGamepadTarget.compileGUITable(): 
		compile an array of gpChildren {gamepad-accessible child, child.getBounds(target)}
	(Selects current gpChild, tweens the GamepadOutline (scale9) around it)
		Menus need a default gpChild and a previous gpChild
	arrow keys direct focus / focal point to the next gpChild
		If a ray drawn in the indicated direction from the current focal point hits another gpChild, it becomes the next focus
		Otherwise, the gpChild closest to the current gpChild in the indicated direction gains focus; its center is the new focal point
	(A is a mouse click on the selected GUIAbstract, B is a mouse click on the default negative target)
	(Speeds up hex slider and menu sliders)
	(ScoreInput uses three-letter dial system instead of text box)
	Prompts user for a sequence of gamepad input
		Never mind
	Snipes the cursor (hides it)
		killMouse, reviveMouse
	"Guess you won't be needing that cursor anymore."
	"Let's face it; he was just using you."
	Gives a blurb about keypad use. Get it?
		Got it

Ongoing issues: 
	Are module devs getting useful errors?
	Remember that the color manager can do stuff besides what it's currently doing
___________________________
Next:
	
	Version checking
	Module version checking
	
	Installable *with AIR* from website
		Look into the AIR badge system
	
	Project site
		Info
		AIR package and source
		In-browser playable demo
		Community (UX Summer 2008)