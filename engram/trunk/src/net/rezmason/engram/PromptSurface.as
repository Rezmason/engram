package net.rezmason.engram {		import flash.display.BitmapData;	import flash.display.BlendMode;	import flash.display.Shape;	import flash.geom.Matrix;		internal class PromptSurface extends WindowSurface {				// INSTANCE PROPERTIES		private var stripe:Shape = new Shape;		private var stripes:BitmapData = new Stripes(0, 0) as BitmapData;		private var scaleVal:Number = 0.4;		private var stripeThickness:Number = 30;		private var smallMatrix:Matrix = new Matrix(scaleVal, 0, 0, scaleVal);		private var _sillhouette:Shape = new Shape;				// CONSTRUCTOR		public function PromptSurface(w:Number, h:Number):void {						bevelAmount ||= 10;			edgeAmount ||= 2;						super(w, h);						stripe.blendMode = BlendMode.DARKEN;		}				// GETTERS & SETTERS				internal function get sillhouette():Shape {			return _sillhouette;		}				// PUBLIC METHODS				override public function redraw(w:int = AUTO, h:int = AUTO):void {			if (stripe.parent == this) {				removeChild(stripe);			}			super.redraw(w, h);			redrawStripes(w, h);			addChild(stripe);			redrawSillhouette(w, h);		}				// PRIVATE METHODS				private function redrawStripes(w:int, h:int):void {			with (stripe.graphics) {				clear();				beginBitmapFill(stripes, smallMatrix, true, true);				drawRect(edgeAmount, edgeAmount * 1.5, w - 2 * edgeAmount, stripeThickness);				endFill();			}		}				private function redrawSillhouette(w:int, h:int):void {			with (_sillhouette.graphics) {				clear();				beginFill(0x000000);				drawRoundRect(0, 0, w, h, bevelAmount, bevelAmount);				endFill();			}		}	}}