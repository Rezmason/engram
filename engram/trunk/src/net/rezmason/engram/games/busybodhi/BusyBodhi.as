package net.rezmason.engram.games.busybodhi {		// IMPORT STATEMENTS	import flash.events.Event;		import net.rezmason.engram.modules.Game;	import net.rezmason.engram.modules.ModuleEvent;	import net.rezmason.engram.modules.GameModule;	import net.rezmason.engram.modules.GameType;	import net.rezmason.engram.modules.ModuleView;			public final class BusyBodhi extends GameModule {				// CLASS PROPERTIES		private static const TITLE:String = "BusyBodhi";				// INSTANCE PROPERTIES		private var _bbGame:BBGame = new BBGame;		private var _bbView:BBView = new BBView(_bbGame);		private var _bbSettingsView:BBSettingsView = new BBSettingsView(_bbGame);						public function BusyBodhi():void {						_defaultSettings["Example"] = true;						_game = _bbGame as Game;			_view = _bbView as ModuleView;			_settingsView = _bbSettingsView as ModuleView;						addColorChild(_view);						_title = TITLE;			_version = "1.0";			_author = "Rezmason";						//sounds.exampleSound = new ExampleSound, channels.exampleSound = 1;						//addChild(new ThisIsNotAStandaloneFlashThingyShape);						//_icon = new BusyBodhiIcon;		}				// GETTERS & SETTERS				override public function get score():int {			return super.score;		}				// PUBLIC METHODS				override public function unlock():void {			super.unlock();		}				override public function reset(event:Event = null):void {			super.reset();					}				override public function resize(ratio:Number = 1, updateView:Boolean = false):void {			_bbView.resize(ratio);			if (updateView) {				//_bbView.update();			}		}				override public function start(event:Event = null, gameType:String = null, debug:Boolean = false):void {						super.start();						interpretSettings();						if (debug) {				_bbGame.debug();			}						switch (_gameType) {				default :				case GameType.ARCADE :					trace("BB: ARCADE!");				break;				case GameType.STUDIO :					trace("BB: STUDIO!");				break;				case GameType.DRILL :					trace("BB: DRILL!");				break;			}						//_bbView.update();		}				override public function pause(event:Event = null):void {						super.pause();		}				override public function resume(event:Event = null):void {			super.resume();						//_bbView.update();		}				override public function end(event:Event = null):void {			super.end();		}				override public function inputResponder(inputType:String, keyDown:Boolean = true):void {						super.inputResponder(inputType, keyDown);					}						// PRIVATE & PROTECTED METHODS				override protected function interpretSettings():void {						if (_settings["Example"] != undefined) {			}			/*			if (_generalOptions.blnEffects) {				_bbGame.addEventListener(BBEvent.CRISIS, startSweat, false, 0, true);				_bbGame.addEventListener(BBEvent.CRISIS_AVERTED, stopSweat, false, 0, true);				_bbGame.addEventListener(BBEvent.CLAP_ON, showBeam, false, 0, true);				_bbGame.addEventListener(BBEvent.CLAP_OFF, hideBeam, false, 0, true);			} else {				_bbGame.removeEventListener(BBEvent.CRISIS, startSweat);				_bbGame.removeEventListener(BBEvent.CRISIS_AVERTED, stopSweat);				_bbGame.removeEventListener(BBEvent.CLAP_ON, showBeam);				_bbGame.removeEventListener(BBEvent.CLAP_OFF, hideBeam);				_bbView.hideBeam();				_bbView.stopSweat();			}			*/		}	}}