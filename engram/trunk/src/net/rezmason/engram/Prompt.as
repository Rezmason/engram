package net.rezmason.engram {	import net.rezmason.display.ColorSprite;	internal class Prompt extends ColorSprite {				// INSTANCE PROPERTIES						private var alertBox:PromptAlertBox = new PromptAlertBox();		private var alertSurface:PromptSurface = new PromptSurface(320, 200);		private var _alertType:AlertType;		private var _palette:Array;				// CONSTRUCTOR		public function Prompt():void {							addChild(alertSurface);			addChild(alertBox);			addColorChild(alertSurface);			addColorChild(alertBox);						alertType = AlertType.DECISION;		}				// GETTERS & SETTERS				internal function get alertType():AlertType {			return _alertType;		}				internal function set alertType(value:AlertType):void {			_alertType = value;			alertBox.symbol = _alertType.symbol;			_palette = GamePalette.ALERT_PALETTES[alertType.paletteIndex].slice();			alertBox.whiteText = !isBright(_palette[0]);			setColors(_palette);		}				// INTERNAL METHODS				internal function show(title:String = "", messsage:String = "", leftButtons:Array = null, rightButtons:Array = null):void {			alertBox.setData(title, messsage, leftButtons, rightButtons);			alertSurface.redraw(alertBox.width + 2 * PromptAlertBox.MARGIN, alertBox.height + 2 * PromptAlertBox.MARGIN);		}				internal function resize(w:int, h:int):void {			alertSurface.redraw(w, h);		}				internal function rerez(ratio:Number = 1):void {			alertSurface.rerez(ratio);		}				// PRIVATE METHODS				private function isBright(color:uint):Boolean {			return ((color >> 16) & 0xFF) + ((color >> 8) & 0xFF) + (color & 0xFF) > 0xE0;		}	}}